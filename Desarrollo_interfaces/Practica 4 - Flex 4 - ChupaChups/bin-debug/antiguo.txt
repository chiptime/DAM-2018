<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="954" minWidth="955" minHeight="600" currentState="authenticated"
			   height.initial="628"
			   initialize="init();">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.skins.halo.WindowBackground;
			import mx.collections.ArrayCollection;
			import spark.events.TextOperationEvent;
			
			
			
			public var list:ArrayList; 
			public function initData():void { 
				list.addItem(listaPizza);
				list.addItem(listaToppings);
				list.addItem(listaBase);
			}
			//public var usuario:Usuario = new Usuario("test", "test", "test");
			
			public var usuario:Usuario;
			public var usuarioRecuerdame:Usuario;
			public var lasPizzas:String = "";
			public var count:int = 0;
			public var randNum:Number;
			public var listaPizza:Array = [{label: "Margarita"}, {label: "Hawaiana"}, {label: "Cuatro Quesos"}, {label: "Carbonara"}, 
				{label: "Barbacoa"},{label: "Steak House"}, {label: "Pepperoni"}, {label: "Pollo Y Barbacoa"}, {label: "Calzone"}];
			public var listaToppings:Array = [{label: "Queso de cabra"}, {label: "Cuatro Quesos"}, {label: "Bacon"}, {label: "Jamon"}, {label: "Piña"},
				{label: "Champiñones"}, {label: "Peperoni"}];
			public var listaBase:Array = [{label : "Carbonara"}, {label: "Base Tomate"}, {label: "Barbacoa"}];

			public function init():void
			{
				pizza.dataProvider    = new ArrayCollection(listaPizza);
				base.dataProvider     = new ArrayCollection(listaBase);
				toppings.dataProvider = new ArrayCollection(listaToppings);
			}
			protected function btn3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub			
				init();
				//Alert.show("Lo sentimos esta en construcción", "Error", mx.controls.Alert.OK);		
			}
			
			protected function label1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				currentState = "forgottenPassword";
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				if(usuario == null)
					Alert.show("Me da que aun no te has creado una cuenta.", "Error de login", mx.controls.Alert.OK);				
				if(usuario.getCorreo() == loginUser.text && usuario.getContrasenia() == loginPass.text){					
					if(userPassErr.visible){
						userPassErr.visible = false;
						areaPruebas.visible = false;
					}
					loginUser.setStyle("contentBackgroundAlpha", "1");
					loginUser.setStyle("contentBackgroundColor", "white");
					loginUser.setStyle("borderColor", "#000000");
					loginPass.setStyle("contentBackgroundAlpha", "1");
					loginPass.setStyle("contentBackgroundColor", "white");
					loginPass.setStyle("borderColor", "#000000");
					loginUser.text = "";
					loginPass.text = "";
					currentState = "authenticated";
				}
				else{
					userPassErr.visible = true;
					loginUser.setStyle("contentBackgroundAlpha", "0.3");
					loginUser.setStyle("contentBackgroundColor", "#e92e2e");
					loginUser.setStyle("borderColor", "#a42626");
					loginPass.setStyle("contentBackgroundAlpha", "0.3");
					loginPass.setStyle("contentBackgroundColor", "#e92e2e");
					loginPass.setStyle("borderColor", "#a42626");
					areaPruebas.visible = true;
				}
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				currentState = "register";
			}
			
			protected function btn2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				resetRandom();
				textTest.text = randNum.toString();
				if(usuarioRecuerdame != null && randNum < 50 && randNum > 10 ){
					loginUser.text = usuarioRecuerdame.getCorreo();
					loginPass.text = usuarioRecuerdame.getContrasenia();
				}
				currentState = "initial";
			}
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(usuario == null){
					Alert.show("Me da que aun no te has creado una cuenta.", "Error de login", mx.controls.Alert.OK);			
				}else
					if(correoParaPass.text == usuario.getCorreo())
						Alert.show("Tu contraseña es:\n" + usuario.getContrasenia() , "Contraseña recuperada", mx.controls.Alert.OK);
				currentState = "initial";
			}
			
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				currentState = "initial";
			}
			
			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				currentState = "initial";
			}			
			protected function button6_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub				
				if(txtNombreR.text || txtCorreoR.text || txtContraseniaR.text || txtRepetirContraseniaR.text != "" ){
					if(txtContraseniaR.text == txtRepetirContraseniaR.text && txtContraseniaR.text != ""){
						usuario = new Usuario (txtNombreR.text, txtCorreoR.text, txtContraseniaR.text);
						if(avisoContra.visible)
							avisoContra.visible = false;
						txtRepetirContraseniaR.setStyle("contentBackgroundAlpha", "1");
						txtRepetirContraseniaR.setStyle("contentBackgroundColor", "white");
						txtRepetirContraseniaR.setStyle("borderColor", "#000000");
						txtContraseniaR.setStyle("contentBackgroundAlpha", "1");
						txtContraseniaR.setStyle("contentBackgroundColor", "white");
						txtContraseniaR.setStyle("borderColor", "#000000");
					}
					else{
						avisoContra.visible = true;
						txtRepetirContraseniaR.setStyle("contentBackgroundAlpha", "0.3");
						txtRepetirContraseniaR.setStyle("contentBackgroundColor", "#e92e2e");
						txtRepetirContraseniaR.setStyle("borderColor", "#a42626");
						txtContraseniaR.setStyle("contentBackgroundAlpha", "0.3");
						txtContraseniaR.setStyle("contentBackgroundColor", "#e92e2e");
						txtContraseniaR.setStyle("borderColor", "#a42626");
					}
					Alert.show("Se ha creado su cuenta " + usuario.getCorreo(), "Creacion correcta", mx.controls.Alert.OK);
					currentState = "initial";
				}
					else
						Alert.show("Porfavor rellene todos los campos", "Error de login", mx.controls.Alert.OK);
				areaPruebas.text += "\n\n" + "Usuario: " + usuario.getCorreo() + "\nContraseña: "+ usuario.getContrasenia();				
			}
			public function resetRandom():void
			{
				randNum = Math.floor(Math.random()*100)+1;
			}
			
			protected function checkbox1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(chckRecuerdame.selected){
					Alert.show("Vaya me han detectado alzheimer, mejor no te fies mucho", 
						"De baja por problemas de salud", mx.controls.Alert.OK);
					resetRandom();
					textTest.text = randNum.toString();
					if(randNum < 50 && randNum > 10 || usuario != null)
						usuarioRecuerdame = new Usuario(usuario.getNombre(), usuario.getCorreo(), usuario.getCorreo());						
				}
			}
			
			protected function chck1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				terminarCompra.enabled = chck1.selected;
			}
			
			protected function button7_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub				
				count++;
				lasPizzas += pizza.selectedItem+"\n" + base.selectedItem + "\t" + toppings.selectedItems+"\n\n" ;				
				areaListaPizzas.text = lasPizzas;
			}
			
			protected function terminarCompra_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var metodo:String = "";
				if(paypal.selected)
					metodo = paypal.label;
				else
					if(tarjeta.selected)
						metodo = tarjeta.label;
					else
						metodo = efectivo.label;
				var fecha:String = calendario.selectedDate.date + "/" + calendario.selectedDate.month+ "/" + calendario.selectedDate.fullYear;
				if(metodo == "" || fecha == "" || lasPizzas == "")
					Alert.show("Primero termina la compra", "Error terminar compra", mx.controls.Alert.OK);
				else{
					Alert.show("Es hora de pagar...", "Terminar compra", mx.controls.Alert.OK);
					currentState = "finish";
				}
				factura.text = "Tu metodo de pago es: \n" + metodo + "\n\n" + "Para el dia: " + fecha +
					"\n\n" + lasPizzas + "\n\n" + "Tendra que pagar: \t" + pagoTotal(count) + "€" ;
			}
			public function pagoTotal(count:int):Number
			{
				return count * 7;
			}
			private function closeWindow():void
			{								
				navigateToURL(new URLRequest("javascript:window.close();"), "_self");        
			}
			
			protected function filtro_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				var arr:Array;
				var arrLetras:Array;
				var palabra:String;
				
				for(var i:int = 0; i < listaPizza.length; i++){
					for(var j:int = 0; j < listaPizza.getItemAt(i).toString().toLowerCase().length; j++){
						if( filtro.text == listaPizza.getItemAt(i).toString().toLowerCase().substring(j, (listaPizza.getItemAt(i).toString().toLowerCase().length < j)? j : j+1 )){
							listaPizza.unshift(listaPizza.getItemAt(i));
							//listaPizza.setItemAt(listaPizza.getItemAt(i), listaPizza.length +2);
							/*
							for(var k:int = 0; k <listaPizza.length; k++)
								listaPizza.setItemAt(listaPizza.getItemAt(i));*/
							
						}
					}
					
				}
			}
			public function filtrar(str:String, text:String):void
			{
				
				if(str.search(text) != -1)					
					switch(str){
						case "Pizza":
							
							break;
						case "Toppings":
							
							break;
						case "Base":
							
							break;
					}
			}
			
		]]>
	</fx:Script>
	
	
	
	<fx:Declarations>
		<s:RadioButtonGroup id="radiogroup"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->		

		
		<s:ArrayList id="comboBox">
			<fx:String>Pizza</fx:String>
			<fx:String>Toppings</fx:String>
			<fx:String>Base</fx:String>			
		</s:ArrayList>
		
		
		<!-- Lista para comboBox -->
		
	</fx:Declarations>
	
	<s:states>
		<s:State name="initial" />
		<s:State name="register" />
		<s:State name="forgottenPassword" />
		<s:State name="authenticated" />
		<s:State name="finish" />
	</s:states>
	
	<s:Group includeIn="initial" width="954" height="628" horizontalCenter="0" verticalCenter="0">
		
		<s:TextInput id="loginUser" includeIn="initial" x="308" y="172" width="260"/>
		<s:TextInput id="loginPass" includeIn="initial" x="308" y="237" width="260"/>
		<s:Button includeIn="initial" x="307" y="291" width="261" label="Iniciar sesión"
				  chromeColor="#F6B144" click="button1_clickHandler(event)"/>
		<s:Button includeIn="initial" x="307" y="385" width="261" label="Crea tu cuenta"
				  chromeColor="#E7E0E0" click="button2_clickHandler(event)"/>
		<s:Label includeIn="initial" x="306" y="108" fontSize="27" fontWeight="bold"
				 text="Iniciar Sesión"/>
		<s:Label includeIn="initial" x="308" y="152" fontWeight="bold"
				 text="Dirección de e-mail o número de teléfono móvil"/>
		<s:Label includeIn="initial" x="308" y="217" fontWeight="bold" text="Contraseña"/>
		<s:Label includeIn="initial" x="403" y="217" click="label1_clickHandler(event)"
				 color="#1177CE" text="¿Has olvidado la contraseña?"/>
		<s:CheckBox id="chckRecuerdame" includeIn="initial" x="307" y="320" label="Recuérdame."
					click="checkbox1_clickHandler(event)"/>
		<s:Label includeIn="initial" x="402" y="365" color="#5A5555" text="¿Eres nuevo?"/>
		<s:Label id="userPassErr" visible="false" x="308" y="267" color="#B32222"
				 text="El usuario o la contraseña son incorrectas"/>
		<s:Label id="areaPruebas" visible="false" x="38" y="56" width="197" height="121"
				 text="Quizas esto te ayude..."/>
		<s:TextInput id="textTest" x="387" y="539"/>
		
	</s:Group>
	
	
	<s:Group includeIn="register" width="955" height="600" horizontalCenter="0" verticalCenter="0">
		
		
		<s:Label includeIn="register" x="348" y="130" fontSize="12" fontWeight="bold" text="Nombre"/>
		<s:TextInput id="txtNombreR" includeIn="register" x="348" y="150" width="260"/>
		<s:Label includeIn="register" x="348" y="201" fontWeight="bold" text="Correo electrónico"/>
		<s:TextInput id="txtCorreoR" includeIn="register" x="348" y="223" width="260"/>
		<s:Label includeIn="register" x="348" y="278" fontWeight="bold" text="Contraseña"/>
		<s:TextInput id="txtContraseniaR" includeIn="register" x="348" y="298" width="260"
					 borderAlpha="0.59" borderColor="#000000" contentBackgroundAlpha="1.0"
					 contentBackgroundColor="#FDFDFD" prompt="Al menos 6 caracteres"/>
		<s:TextInput id="txtRepetirContraseniaR" includeIn="register" x="348" y="371" width="260"
					 borderColor="#000000"/>
		<s:Label includeIn="register" x="348" y="350" fontWeight="bold"
				 text="Confirma tu contraseña"/>
		<s:Button includeIn="register" x="348" y="425" width="260" label="Crea tu cuenta"
				  chromeColor="#F6B144" click="button6_clickHandler(event)"/>
		<s:Label x="348" y="92" fontSize="27" fontWeight="bold" text="Crear Cuenta"/>
		<s:Button id="cancelarCrearCuenta" x="348" y="482" width="260" label="Cancelar"
				  click="button4_clickHandler(event)"/>
		<s:Label id="avisoContra" visible="false" x="348" y="401" color="#B32222" fontWeight="bold"
				 text="! Las contraseñas no coinciden"/>
		
		<!--
		<s:TextInput includeIn="register" x="348" y="298" width="260" borderAlpha="0.59"
		borderColor="#CB2A2A" contentBackgroundAlpha="0.1"
		contentBackgroundColor="#FF0000" prompt="Al menos 6 caracteres"/>-->
		
		
	</s:Group>
	
	
	
	<s:Group includeIn="authenticated"
			 horizontalCenter="0"
			 verticalCenter="0">
		
		<s:List id="pizza" x="0" y="211" width="228" height="102" ></s:List>
		<s:List id="base" x="236" y="211" width="237.5" height="102" 
				enabled="true"></s:List>
		<s:List id="toppings" x="482" y="211" width="237.5" height="102"
				allowMultipleSelection="true"  enabled="true"></s:List>
		<s:TextInput id="filtro" x="0" y="133" width="228" change="filtro_changeHandler(event)"
					 enabled="true" prompt="type filter text..."/>
		<s:Button id="terminarCompra" x="483" y="521" width="240" height="43" label="Terminar compra"
				  chromeColor="#FAFAFA" click="terminarCompra_clickHandler(event)" color="#000000"
				  enabled="false" focusColor="#7B10E8" fontSize="16"/>
		<s:Button id="volverMenu" x="603" y="27" width="112" height="26" label="Volver al menu"
				  click="btn2_clickHandler(event)" enabled="true"/>
		
		<s:Button id="search" x="379" y="134" width="85" height="22" label="Search"
				  click="btn3_clickHandler(event)"/>
		<s:CheckBox id="chck1" x="14" y="536"
					label="Acepta que &quot;Telepizza&quot; no tiene culpa de cualquier tipo de problemas intestinales "
					click="chck1_clickHandler(event)"/>
		<s:Image x="0" y="-17" width="217" height="150" source="assets/logo_telepizza.jpg"/>
		<s:VGroup id="metodoPago" x="588" y="346" width="125" height="73">
			<s:RadioButton id="paypal" label="Pagar con Paypal" groupName="radiogroup"/>
			
			<s:RadioButton id="tarjeta" label="Pagar con Tarjeta" groupName="radiogroup"/>
			<s:RadioButton id="efectivo" label="Pagar en efectivo" groupName="radiogroup"/>
		</s:VGroup>
		<s:ComboBox id="comboFiltro" x="227" y="133" width="152" height="22" dataProvider="{comboBox}"
					selectedIndex="0"/>
		<mx:DateField id="calendario" x="588" y="463" width="125">		
		</mx:DateField>
		<s:Label x="47" y="186" fontSize="18" fontWeight="bold" text="Pizzas"/>
		<s:Label x="573" y="186" fontSize="18" fontWeight="bold" text="Toppings"/>
		<s:Label x="335" y="186" fontSize="18" fontWeight="bold" text="Base"/>
		<s:TextArea id="areaListaPizzas" x="0" y="346" width="445" height="168" editable="false"
					text="&quot;Tus Pizzas son: \n&quot;"/>
		<s:Button x="603" y="135" width="110" label="Agregar pizza"
				  click="button7_clickHandler(event)"/>
		<s:Label x="0" y="321" fontSize="18" fontWeight="bold" text="Lista de Pizzas Pedidas"/>
		<s:Label x="574" y="321" fontSize="18" fontWeight="bold" text="Método de pago"/>
		<s:Label x="590" y="438" fontSize="18" fontWeight="bold" text="Día de entrega"/>
		
		
	</s:Group>
	<s:Label includeIn="forgottenPassword" x="352" y="141" fontSize="27" fontWeight="bold"
			 text="Recuperar Contraseña"/>
	<s:Label includeIn="forgottenPassword" x="352" y="197" fontWeight="bold"
			 text="E-mail"/>
	<s:Button includeIn="forgottenPassword" x="352" y="257" width="295" label="Continuar"
			  chromeColor="#F6B144" click="button3_clickHandler(event)"/>
	<s:TextInput id="correoParaPass" includeIn="forgottenPassword" x="352" y="217" width="295"/>
	<s:Button includeIn="forgottenPassword" x="352" y="300" width="295" label="Cancelar"
			  click="button5_clickHandler(event)"/>
	
	
	<s:Group includeIn="finish" width="954" height="628" horizontalCenter="0" verticalCenter="0">
		<s:Image x="296" y="29" width="363" height="152" source="assets/logo_telepizza(1).jpg"/>
		<s:TextArea id="factura" x="222" y="190" width="494" height="373" editable="false"/>
		<s:Button id="salir" x="432" y="571" label="Salir" click="closeWindow()"/>
		
	</s:Group>
		
	
	
	
	
</s:Application>
